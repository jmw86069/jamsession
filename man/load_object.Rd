% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jamsession.R
\name{load_object}
\alias{load_object}
\title{load R object by name}
\usage{
load_object(
  object,
  save_date = NULL,
  objects_path = jamsession_paths()$objects,
  envir = globalenv(),
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{\code{character} string indicating the name of the R
object to load, or \code{data.frame} output from \code{grep_objects()}
which contains colnames \verb{("object", "object_path", "object_file")}.}

\item{save_date}{optional character string with a specific date to
use when loading an object. This string is matched with
the \code{"save_date"} returned by \code{list_objects()}.
When \code{save_date} is \code{NULL}, the most recent
object is loaded, which is the default behavior.}

\item{objects_path}{character vector of one or more file paths to
search for saved R objects. When \code{objects_path=NULL}, it uses
the output from \code{jamsession_paths()$objects}.}

\item{envir}{optional R environment inside which to load the R object.
Note that if an R object already exists in this environment,
it will overwritten without warning. This behavior is intended
by \code{load_object()}.}

\item{verbose}{logical whether to print verbose output}

\item{...}{additional arguments are ignored.}
}
\value{
invisible name of the R object loaded. It also loads the R object
into the environment specified, by default the active global environment
.GlobalEnv.
}
\description{
load R object by name
}
\details{
This function loads the most recently saved R object by name, from
a given file path. This mechanism is intended to help share useful R
objects across R sessions, especially where it may be helpful to discover
R objects by name, and where R objects may continue to be useful over time.

Typically this function is called with the name of one or more saved
objects, and loads the most recent version of each. However, the argument
\code{save_date} can be supplied as a vector, which is recycled for each
saved object, as a method to load a specific version of an object.
This behavior is not intended for routine use, but is available
in rare cases that you may want to inspect previous versions of
an object.

Note that \code{envir} can be used to load the object into a separate
environment, if needed.
}
\examples{
my_df <- data.frame(A=LETTERS[1:5], a=letters[1:5]);
print(my_df);

save_object("my_df");

grep_objects("my_df");

rm(my_df);

load_object("my_df");
print(my_df);

load_object(grep_objects("my_df"))
print(my_df);

######################################
# Load into a separate environment
rm(my_df);
sep_env <- new.env();
load_object("my_df", envir=sep_env);

# this object is not in the current workspace
find("my_df");

# you can use get() to see this object
print(get("my_df", envir=sep_env));

# or you can attach the environment to use objects inside
find("my_df");
attach(sep_env);
find("my_df");

# detach when no longer using this environment
detach("sep_env");
find("my_df");

######################################
# example showing two objects stored together
my_df2 <- data.frame(B=LETTERS[11:15], b=letters[11:15]);
load_object("my_df");
save_object(c("my_df", "my_df2"));

grep_objects("my_df2");
loaded <- load_object(grep_objects("my_df2"));

# note that it loads two objects
print(loaded);


}
\seealso{
Other jamsession objects: 
\code{\link{grep_objects}()},
\code{\link{list_objects}()},
\code{\link{save_object}()}
}
\concept{jamsession objects}
